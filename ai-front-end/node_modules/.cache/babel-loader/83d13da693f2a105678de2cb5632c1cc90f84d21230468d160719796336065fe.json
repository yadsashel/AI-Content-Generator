{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yadsa\\\\Desktop\\\\AI Content Generator\\\\ai-front-end\\\\src\\\\pages\\\\Profile.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Profile() {\n  _s();\n  const [user, setUser] = useState({\n    email: \"\",\n    name: \"\",\n    password: \"\"\n  });\n  const [form, setForm] = useState(user);\n  useEffect(() => {\n    const fetchProfile = async () => {\n      const token = localStorage.getItem(\"token\");\n      if (!token) return; // unauthorized users cannot access\n\n      const res = await fetch(\"http://127.0.0.1:8000/api/profile\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const data = await res.json();\n      setUser({\n        ...data,\n        password: \"\"\n      });\n      setForm({\n        ...data,\n        password: \"\"\n      });\n    };\n    fetchProfile();\n  }, []);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setForm({\n      ...form,\n      [name]: value\n    });\n  };\n  const handleUpdate = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem(\"token\");\n    const res = await fetch(\"http://127.0.0.1:8000/api/profile\", {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify(form)\n    });\n    if (!res.ok) {\n      const data = await res.json();\n      alert(data.detail || \"Update failed\");\n    } else {\n      alert(\"Profile updated successfully!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleUpdate,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"name\",\n      value: form.name,\n      onChange: handleChange,\n      placeholder: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"email\",\n      value: form.email,\n      disabled: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"password\",\n      value: form.password,\n      onChange: handleChange,\n      placeholder: \"Password\",\n      type: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Update Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(Profile, \"axvkzzOKnIKMTndL2qGhck1G7eU=\");\n_c = Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Profile","_s","user","setUser","email","name","password","form","setForm","fetchProfile","token","localStorage","getItem","res","fetch","headers","Authorization","data","json","handleChange","e","value","target","handleUpdate","preventDefault","method","body","JSON","stringify","ok","alert","detail","onSubmit","children","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","disabled","type","_c","$RefreshReg$"],"sources":["C:/Users/yadsa/Desktop/AI Content Generator/ai-front-end/src/pages/Profile.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport default function Profile() {\r\n  const [user, setUser] = useState({ email: \"\", name: \"\", password: \"\" });\r\n  const [form, setForm] = useState(user);\r\n\r\n  useEffect(() => {\r\n    const fetchProfile = async () => {\r\n      const token = localStorage.getItem(\"token\");\r\n      if (!token) return; // unauthorized users cannot access\r\n\r\n      const res = await fetch(\"http://127.0.0.1:8000/api/profile\", {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      const data = await res.json();\r\n      setUser({ ...data, password: \"\" });\r\n      setForm({ ...data, password: \"\" });\r\n    };\r\n    fetchProfile();\r\n  }, []);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm({ ...form, [name]: value });\r\n  };\r\n\r\n  const handleUpdate = async e => {\r\n    e.preventDefault();\r\n    const token = localStorage.getItem(\"token\");\r\n    const res = await fetch(\"http://127.0.0.1:8000/api/profile\", {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\", Authorization: `Bearer ${token}` },\r\n      body: JSON.stringify(form),\r\n    });\r\n    if (!res.ok) {\r\n      const data = await res.json();\r\n      alert(data.detail || \"Update failed\");\r\n    } else {\r\n      alert(\"Profile updated successfully!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleUpdate}>\r\n      <input name=\"name\" value={form.name} onChange={handleChange} placeholder=\"Name\" />\r\n      <input name=\"email\" value={form.email} disabled />\r\n      <input name=\"password\" value={form.password} onChange={handleChange} placeholder=\"Password\" type=\"password\" />\r\n      <button type=\"submit\">Update Profile</button>\r\n    </form>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}